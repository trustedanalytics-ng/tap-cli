/**
 * Copyright (c) 2016 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Automatically generated by MockGen. DO NOT EDIT!
// Source: vendor/github.com/trustedanalytics-ng/tap-api-service/client/login.go

package api

import (
	gomock "github.com/golang/mock/gomock"
	uaa_connector "github.com/trustedanalytics-ng/tap-api-service/uaa-connector"
)

// Mock of TapApiServiceLoginApi interface
type MockTapApiServiceLoginApi struct {
	ctrl     *gomock.Controller
	recorder *_MockTapApiServiceLoginApiRecorder
}

// Recorder for MockTapApiServiceLoginApi (not exported)
type _MockTapApiServiceLoginApiRecorder struct {
	mock *MockTapApiServiceLoginApi
}

func NewMockTapApiServiceLoginApi(ctrl *gomock.Controller) *MockTapApiServiceLoginApi {
	mock := &MockTapApiServiceLoginApi{ctrl: ctrl}
	mock.recorder = &_MockTapApiServiceLoginApiRecorder{mock}
	return mock
}

func (_m *MockTapApiServiceLoginApi) EXPECT() *_MockTapApiServiceLoginApiRecorder {
	return _m.recorder
}

func (_m *MockTapApiServiceLoginApi) Login() (uaa_connector.LoginResponse, int, error) {
	ret := _m.ctrl.Call(_m, "Login")
	ret0, _ := ret[0].(uaa_connector.LoginResponse)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockTapApiServiceLoginApiRecorder) Login() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Login")
}

func (_m *MockTapApiServiceLoginApi) GetApiServiceHealth() error {
	ret := _m.ctrl.Call(_m, "GetApiServiceHealth")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTapApiServiceLoginApiRecorder) GetApiServiceHealth() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetApiServiceHealth")
}

func (_m *MockTapApiServiceLoginApi) GetLoginCredentials() (string, string, string) {
	ret := _m.ctrl.Call(_m, "GetLoginCredentials")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(string)
	return ret0, ret1, ret2
}

func (_mr *_MockTapApiServiceLoginApiRecorder) GetLoginCredentials() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLoginCredentials")
}

func (_m *MockTapApiServiceLoginApi) Introduce() error {
	ret := _m.ctrl.Call(_m, "Introduce")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTapApiServiceLoginApiRecorder) Introduce() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Introduce")
}
