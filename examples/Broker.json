{
  "body": {
    "componentType": "broker",
    "persistentVolumeClaims": null,
    "deployments": [
      {
        "kind": "Deployment",
        "apiVersion": "extensions/v1beta1",
        "metadata": {
          "name": "$short_serviceid",
          "creationTimestamp": null,
          "labels": {
            "catalog_plan_id": "$catalog_plan_id",
            "catalog_service_id": "$catalog_service_id",
            "short_serviceid": "$short_serviceid",
            "managed_by": "TAP",
            "org": "$org",
            "service_id": "$service_id",
            "space": "$space"
          }
        },
        "spec": {
          "replicas": 1,
          "selector": {
            "matchLabels": {
              "managed_by": "TAP",
              "short_serviceid": "$short_serviceid",
              "service_id": "$service_id"
            }
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "short_serviceid": "$short_serviceid",
                "managed_by": "TAP",
                "service_id": "$service_id"
              }
            },
            "spec": {
              "volumes": null,
              "containers": [
                {
                  "name": "fake-broker",
                  "image": "tapimages.us.enableiot.com:8080/fake-broker",
                  "ports": [
                    {
                      "containerPort": 80,
                      "protocol": "TCP"
                    }
                  ],
                  "env": [
                    {
                      "name": "PORT",
                      "value": "80"
                    },
                    {
                      "name": "USERNAME",
                      "valueFrom": {
                        "secretKeyRef": {
                          "Name": "$short_serviceid-broker-credentials",
                          "key": "username"
                        }
                      }
                    },
                    {
                      "name": "PASSWORD",
                      "valueFrom": {
                        "secretKeyRef": {
                          "Name": "$short_serviceid-broker-credentials",
                          "key": "password"
                        }
                      }
                    },
                    {
                      "name": "MANAGED_BY",
                      "value": "TAP"
                    }
                  ],
                  "resources": {},
                  "imagePullPolicy": "IfNotPresent"
                }
              ],
              "restartPolicy": "Always",
              "dnsPolicy": "ClusterFirst",
              "serviceAccountName": ""
            }
          },
          "strategy": {}
        },
        "status": {}
      }
    ],
    "services": [
      {
        "kind": "Service",
        "apiVersion": "v1",
        "metadata": {
          "name": "$short_serviceid",
          "creationTimestamp": null,
          "labels": {
            "catalog_plan_id": "$catalog_plan_id",
            "catalog_service_id": "$catalog_service_id",
            "short_serviceid": "$short_serviceid",
            "managed_by": "TAP",
            "org": "$org",
            "service_id": "$service_id",
            "space": "$space"
          }
        },
        "spec": {
          "type": "NodePort",
          "ports": [
            {
              "name": "broker",
              "protocol": "TCP",
              "port": 80,
              "targetPort": 0,
              "nodePort": 0
            }
          ],
          "selector": {
            "service_id": "$service_id"
          }
        },
        "status": {
          "loadBalancer": {}
        }
      }
    ],
    "serviceAccounts": [
      {
        "kind": "ServiceAccount",
        "apiVersion": "v1",
        "metadata": {
          "name": "$short_serviceid",
          "creationTimestamp": null,
          "labels": {
            "catalog_plan_id": "$catalog_plan_id",
            "catalog_service_id": "$catalog_service_id",
            "short_serviceid": "$short_serviceid",
            "managed_by": "TAP",
            "org": "$org",
            "service_id": "$service_id",
            "space": "$space"
          }
        },
        "secrets": null
      }
    ],
    "secrets": [
      {
        "kind": "Secret",
        "apiVersion": "v1",
        "metadata": {
          "name": "$short_serviceid-broker-credentials",
          "creationTimestamp": null,
          "labels": {
            "short_serviceid": "$short_serviceid",
            "managed_by": "TAP",
            "service_id": "$service_id"
          }
        },
        "data": {
          "password": "JHJhbmRvbTI=",
          "username": "JHJhbmRvbTE="
        }
      }
    ]
  },
  "hooks": {
    "provision": {
      "kind": "Pod",
      "apiVersion": "v1",
      "metadata": {
        "name": "$short_serviceid-fakebroker-provision",
        "creationTimestamp": null,
        "labels": {
          "managed_by": "TAP",
          "service_id": "$service_id"
        },
        "annotations": {
          "createConfigMap": "true"
        }
      },
      "spec": {
        "volumes": null,
        "containers": [
          {
            "name": "$short_serviceid-provision-job",
            "image": "tutum/curl:latest",
            "env": [
              {
                "name": "BROKER_USERNAME",
                "valueFrom": {
                  "secretKeyRef": {
                    "Name": "$broker_short_instance_id-broker-credentials",
                    "key": "username"
                  }
                }
              },
              {
                "name": "BROKER_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "Name": "$broker_short_instance_id-broker-credentials",
                    "key": "password"
                  }
                }
              }
            ],
            "command": [
              "/bin/bash"
            ],
            "args": [
              "-c",
              "host=$broker_short_instance_id_SERVICE_HOST && host=${host^^} && port=$broker_short_instance_id_SERVICE_PORT && port=${port^^} && curl -s -X PUT ${!host}:${!port}/v2/service_instances/$source_offering_id --user ${BROKER_USERNAME}:${BROKER_PASSWORD}"
            ],
            "resources": {},
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Never",
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": ""
      }
    },
    "catalog": {
      "kind": "Pod",
      "apiVersion": "v1",
      "metadata": {
        "name": "$short_serviceid-catalog-job",
        "creationTimestamp": null,
        "labels": {
          "managed_by": "TAP",
          "service_id": "$service_id"
        },
        "annotations": {
          "createConfigMap": "true"
        }
      },
      "spec": {
        "volumes": null,
        "containers": [
          {
            "name": "$short_serviceid-catalog-job",
            "image": "tutum/curl:latest",
            "env": [
              {
                "name": "BROKER_USERNAME",
                "valueFrom": {
                  "secretKeyRef": {
                    "Name": "$short_serviceid-broker-credentials",
                    "key": "username"
                  }
                }
              },
              {
                "name": "BROKER_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "Name": "$short_serviceid-broker-credentials",
                    "key": "password"
                  }
                }
              }
            ],
            "command": [
              "/bin/bash"
            ],
            "args": [
              "-c",
              "host=$short_serviceid_SERVICE_HOST && host=${host^^} && port=$short_serviceid_SERVICE_PORT && port=${port^^} && curl -s ${!host}:${!port}/v2/catalog --user ${BROKER_USERNAME}:${BROKER_PASSWORD}"
            ],
            "resources": {},
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Never",
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": ""
      }
    }
  }
}